<section class="min-h-screen py-8 antialiased bg-gray-900 md:py-16">
  <div class="mx-auto  max-w-screen-xl px-4 2xl:px-0">
    <h2 class="text-xl font-semibold text-white sm:text-2xl mb-6">Your Cart</h2>
    <div id="cart-wrapper" class="lg:flex lg:gap-8">
      <!-- Main Cart Section -->
      <div class="w-full lg:w-2/3 space-y-6">
        <% if (cart.products.length === 0) { %>
          <p class="text-lg text-gray-400">Your cart is empty.</p>
          <div class="min-h-screen items-center flex flex-col justify-center"></div>
        <% } else { %>
          <% cart.products.forEach((item) => { %>
            <div class="rounded-lg border p-4 shadow-sm border-gray-700 bg-gray-800 cart-item">
              <div class="flex items-center justify-between">
                <a 
                  onclick="window.location.href='/product-details/<%= item.productId._id %>'" 
                  class="flex ml-4 shrink-0"
                >
                  <img 
                    class="h-20 w-20 rounded-md border-2 border-gray-300 shadow-md hover:shadow-lg hover:scale-105 hover:bg-gray-100 hover:border-gray-400 cursor-pointer transition duration-300" 
                    src="<%= item.productId.img[0] %>" 
                    alt="imac image" 
                  />
                </a>
                
                <div class="flex-1 ml-4">
                  <p 
                    onclick="window.location.href='/product-details/<%= item.productId._id %>'" 
                    class="text-base font-medium text-white cursor-pointer transition duration-300">
                    <%= item.productId.name %>
                  </p>
                  <p class="text-sm text-gray-400">Size: <%= item.size %></p>
                  <p class="mt-2 text-base font-bold text-white">$<%= item.productId.price %></p>
                </div>
                <!-- Quantity Selector -->
                <div class="flex items-center">
                  <button class="h-8 w-8 border hover:bg-gray-200 border-gray-600 bg-gray-700 rounded" data-action="decrease" data-product-id="<%= item.productId._id %>" data-size="<%= item.size %>">-</button>
                  <p class="w-12 text-center text-white"><%= item.quantity %></p>
                  <button class="h-8 w-8 border hover:bg-gray-200 border-gray-600 bg-gray-700 rounded" data-action="increase" data-product-id="<%= item.productId._id %>" data-size="<%= item.size %>">+</button>
                </div>
                <!-- Remove Button -->
                <button class="ml-4 text-sm font-medium text-red-500" data-action="remove" data-product-id="<%= item.productId._id %>" data-size="<%= item.size %>">Remove</button>
              </div>
            </div>
          <% }); %>
        <% } %>
      </div>

      <% if (cart.products.length > 0) { %>
      <!-- Order Summary Section -->
      <div class="summary-wrapper w-full lg:w-1/3 mt-6 lg:mt-0 space-y-6">
        <div class="rounded-lg border p-4 shadow-sm border-gray-700 bg-gray-800">
          <p class="text-xl font-semibold text-white">Order Summary</p>
          <dl class="mt-4 space-y-2">
            <div class="flex justify-between">
              <dt class="text-base text-gray-400">Original price</dt>
              <dd class="text-base font-medium text-white original-price">$<%= cart.products.reduce((total, item) => total + item.quantity * item.productId.price, 0).toFixed(2) %></dd>
            </div>
            <div class="flex justify-between border-t border-gray-700 pt-2">
              <dt class="text-base font-bold text-white">Total</dt>
              <dd class="text-base font-bold text-white total-price">$<%= cart.products.reduce((total, item) => total + item.quantity * item.productId.price, 0).toFixed(2) %></dd>
            </div>
          </dl>
          <form method="GET" action="/cart/checkout" class="mt-4">
            <button class="w-full bg-green-500 text-white px-4 py-2 rounded-lg">Proceed to Checkout</button>
          </form>
        </div>
        <!-- <div class="rounded-lg border p-4 shadow-sm border-gray-700 bg-gray-800">
          <form class=""space-y-2>
            <label for="voucher" class="block text-sm font-medium text-white">Do you have a voucher or gift card?</label>
            <input type="text" id="voucher" class="mt-2 block w-full rounded-md p-2.5 border-gray-600 bg-gray-700 text-white" placeholder="Enter code">
            <button type="submit" class="w-full bg-blue-600 text-white px-4 py-2 mt-4 rounded-lg">Apply Code</button>
          </form>
        </div> -->
      </div>
      <% } %>
    </div>
  </div>
</section>


<script>
  document.addEventListener('DOMContentLoaded', () => {
    console.log("DOM is ready!");
    const cartContainer = document.getElementById('cart-wrapper');

    if (!cartContainer) {
      console.error("Cart container not found.");
      return;
    }

    cartContainer.addEventListener('click', (e) => {
      // console.log('Event target:', e.target);
      //console.log('Dataset:', e.target.dataset);
      const action = e.target.dataset.action;
      if (!action) return;

      const productId = e.target.dataset.productId;
      const size = e.target.dataset.size;

      if (!productId || !size) {
        console.error("Missing product ID or size.");
        return;
      }

      //console.log('Product ID:', productId);
      //console.log('Size:', size);

      if (action === 'remove') {
        removeItem(productId, size);
      } else {
        const quantity = action === 'increase' ? 1 : -1;
        //console.log('Quantity:', quantity);
        updateCartItem(productId, size, quantity);
      }
    });

    function updateCartItem(productId, size, quantity) {
      const payload = { productId, size, quantity };

      //console.log("Payload:", payload); // Log the payload being sent

      fetch('/cart/update', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            updateCartUI(data.cart);
          } else {
            alert(data.message || 'Failed to update cart.');
          }
        })
        .catch((error) => console.error('Error updating cart:', error));
    }


    function removeItem(productId, size) {
      const payload = { productId, size };

      //console.log("Payload:", payload); // Log the payload being sent

      fetch('/cart/remove', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }, // Specify JSON content type
        body: JSON.stringify(payload), // Convert payload to JSON
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            updateCartUI(data.cart); // Update the cart UI with the new cart data
          } else {
            alert(data.message || 'Failed to remove item.');
          }
        })
        .catch((error) => console.error('Error removing item:', error));
    }


    function updateCartUI(cart) {
      //console.log('Updating cart UI:', cart);
      const cartWrapper = document.getElementById('cart-wrapper');
      const orderSummaryContainer = cartWrapper.querySelector('.summary-wrapper');
      const orderOriginalTotal = document.querySelector('.original-price');
      const orderSummaryTotal = document.querySelector('.total-price');

      // Clear existing cart items
      const cartItemsContainer = cartWrapper.querySelector('.w-full.lg\\:w-2\\/3');
      cartItemsContainer.innerHTML = '';

      if (cart.products.length === 0) {
        cartItemsContainer.innerHTML = `<p class="text-lg text-gray-400">Your cart is empty.</p>
                                        <div class="min-h-screen items-center flex flex-col justify-center"></div>`;
        orderSummaryContainer.innerHTML = '';
        return;
      }

      console.log('Cart:', cart.products);

      // Rebuild cart items
      cart.products.forEach((item) => {
        //console.log('Item: ', item.productId);
        console.log('Image URL:', item.productId.img[0]);
        const cartItem = `
          <div class="rounded-lg border p-4 shadow-sm border-gray-700 bg-gray-800 cart-item">
            <div class="flex items-center justify-between">
              <a 
                  onclick="window.location.href='/product-details/ ${item.productId._id }'" 
                  class="flex ml-4 shrink-0"
                >
                  <img 
                    class="h-20 w-20 rounded-md border-2 border-gray-300 shadow-md hover:shadow-lg hover:scale-105 hover:bg-gray-100 hover:border-gray-400 cursor-pointer transition duration-300" 
                    src="${ item.productId.img[0] }" 
                    alt="imac image" 
                  />
                </a>
              <div class="flex-1 ml-4">
                <p class="text-base font-medium text-white">${item.productId.name}</p>
                <p class="text-sm text-gray-400">Size: ${item.size}</p>
                <p class="mt-2 text-base font-bold text-white">$${item.productId.price}</p>
              </div>
              <div class="flex items-center">
                <button class="h-8 w-8 border hover:bg-gray-200 border-gray-600 bg-gray-700 rounded" data-action="decrease" data-product-id="${item.productId._id}" data-size="${item.size}">-</button>
                <p class="w-12 text-center text-white">${item.quantity}</p>
                <button class="h-8 w-8 border hover:bg-gray-200 border-gray-600 bg-gray-700 rounded" data-action="increase" data-product-id="${item.productId._id}" data-size="${item.size}">+</button>
              </div>
              <button class="ml-4 text-sm font-medium text-red-500" data-action="remove" data-product-id="${item.productId._id}" data-size="${item.size}">Remove</button>
            </div>
          </div>
        `;
        cartItemsContainer.insertAdjacentHTML('beforeend', cartItem);
      });

      // Update order summary total
      const total = cart.products.reduce((sum, item) => sum + item.productId.price * item.quantity, 0);
      orderOriginalTotal.textContent = `$${total.toFixed(2)}`;
      orderSummaryTotal.textContent = `$${total.toFixed(2)}`;
    }
  });

</script>